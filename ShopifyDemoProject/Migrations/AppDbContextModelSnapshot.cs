// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopifyDemoProject;

#nullable disable

namespace ShopifyDemoProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShopifyDemoProject.Models.Inventory", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "LocationID");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            LocationID = 1,
                            Quantity = 20
                        },
                        new
                        {
                            ProductID = 2,
                            LocationID = 1,
                            Quantity = 50
                        },
                        new
                        {
                            ProductID = 3,
                            LocationID = 1,
                            Quantity = 15
                        },
                        new
                        {
                            ProductID = 1,
                            LocationID = 2,
                            Quantity = 50
                        },
                        new
                        {
                            ProductID = 2,
                            LocationID = 2,
                            Quantity = 500
                        },
                        new
                        {
                            ProductID = 3,
                            LocationID = 2,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("ShopifyDemoProject.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Capacity")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "124 Real Place Ave.",
                            Capacity = 2500f,
                            Name = "Storefront"
                        },
                        new
                        {
                            Id = 2,
                            Address = "471 Industrial Complex Rd.",
                            Capacity = 10000f,
                            Name = "Warehouse"
                        });
                });

            modelBuilder.Entity("ShopifyDemoProject.Models.Price", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("ProductID", "LocationID");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            LocationID = 1,
                            UnitPrice = 2.25f
                        },
                        new
                        {
                            ProductID = 2,
                            LocationID = 1,
                            UnitPrice = 0.75f
                        });
                });

            modelBuilder.Entity("ShopifyDemoProject.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("DefaultPrice")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("VolPerUnit")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultPrice = 4.56f,
                            Description = "Bundle of Bananas",
                            Name = "Bananas",
                            VolPerUnit = 1.2f
                        },
                        new
                        {
                            Id = 2,
                            DefaultPrice = 0.95f,
                            Description = "Can of Soup",
                            Name = "Soup",
                            VolPerUnit = 0.5f
                        },
                        new
                        {
                            Id = 3,
                            DefaultPrice = 5f,
                            Description = "Box of Cereal",
                            Name = "Cereal",
                            VolPerUnit = 3.5f
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
